extends c
##### main
snippet mainargs
	int main(int argc, char **argv) {
		${0}
		return 0;
	}
snippet main
	int main(int, char**) {
		${0}
		return 0;
	}
##### libs
# io
snippet io
	#include <iostream>$0
# string
snippet string
	#include <string>$0
# algorithm
snippet algo
	#include <algorithm>$0
# iterator
snippet iter
	#include <iterator>$0
# exception
snippet exception
	#include <exception>$0
##### function
# cout
snippet cout
	std::cout << $0
# cin
snippet cin
	std::cin >> $0
# endl
snippet endl
	std::endl$0
##### headerfiles and preprocessor
snippet guard
	#ifndef `toupper(expand('%:t:r'))`_HPP
	#define `toupper(expand('%:t:r'))`_HPP

	$0

	#endif
##### classes
snippet class
	class $1 {
	  public:
		$1() = default;
		~$1() = default;

	  private:
		$0
	};
##### iterators
snippet osit
	std::ostream_iterator<${1:int}>(std::cout, "\n")$0
snippet backinsit
	std::back_insert_iterator<${2:std::vector<int>}>(${3:vector})$0
##### operator
# <<
snippet op<<
	std::ostream& operator<<(std::ostream& os, const ${1:Obj}& ${2:obj}) {
		$0
		return os;
	}
# <
snippet op<
	bool operator<(const ${1:Obj} &${2:obj}) const {
		$0
	}
# >
snippet op>
	bool operator>(const ${1:Obj} &${2:obj}) const {
		$0
	}
# ==
snippet op==
	bool operator==(const ${1:Obj} &${2:obj}) const {
		$0
	}
# +
snippet op+
	${1:Obj} operator+(const ${1:Obj} &a, const ${1:Obj} &b) {
		$0
	}
